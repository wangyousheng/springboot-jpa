<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	
	<context:component-scan base-package="com.baoxian.dao"/>
	
	<!-- 读取db.properties文件 -->
	<util:properties id="db" location="classpath:db.properties"/>
	
	<!-- 配置DataSource -->
	<bean id="dataSource" 	class="org.apache.commons.dbcp.BasicDataSource" 	destroy-method="close">
		<!-- 自动调用set+name方法 -->
		<property name="username" value="#{db.user}"/>
		<property name="password" value="#{db.pwd}"/>
		<property name="url" value="#{db.url}"/>
		<property name="driverClassName" value="#{db.driver}"/>
		<property name="initialSize" value="#{db.initSize}"/>
		<property name="maxActive" value="#{db.maxSize}"/>
	</bean>
	
	<!-- mybatis:SqlSessionFactoryBean作为工厂创建了sqlSessionFactory类型的对象
		spring 中FactoryBean 结尾的都是工厂的Bean，创建的对象不是本类(FactoryBean)类型，是生产的“产品”类型 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
	</bean>
	
	<!-- 配置Mapper接口扫描 -->
	<!-- mapper接口扫描器，用于扫描Mapper接口并且为接口创建实现对象Bean -->
	<bean id="mapperScanner"
		class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.baoxian.dao" />
		<!-- sqlSessionFactory可以不用配置 -->
		<!-- <property name="sqlSessinoFactory" ref="sqlSessionFactory"/> -->
	</bean>
	
	 <!-- 添加注解事务支持 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		 <property name="dataSource" ref="dataSource"/>
 	</bean>
 	<tx:annotation-driven transaction-manager="txManager"/>
</beans>